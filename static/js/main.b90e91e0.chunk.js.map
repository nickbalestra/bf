{"version":3,"sources":["Photos.js","App.js","serviceWorker.js","index.js"],"names":["Photos","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","index","open","handleClickPrev","setState","handleClickNext","handleClose","handleClickGallery","e","data","inherits","createClass","key","value","_this$state","react_default","a","createElement","react_photo_gallery_esm","photos","onClick","columns","lib","src","srcIndex","onClickPrev","onClickNext","onClose","Component","App","alt","style","width","filter","className","src_Photos","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2yCAiDeA,EA5Cf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNC,MAAO,EACPC,MAAM,GAHVjB,EAMEkB,gBAAkB,WAChBlB,EAAKmB,SAAS,CAAEH,MAAOhB,EAAKe,MAAMC,MAAQ,KAP9ChB,EAUEoB,gBAAkB,WAChBpB,EAAKmB,SAAS,CAAEH,MAAOhB,EAAKe,MAAMC,MAAQ,KAX9ChB,EAcEqB,YAAc,WACZrB,EAAKmB,SAAS,CAAEF,MAAM,KAf1BjB,EAkBEsB,mBAAqB,SAACC,EAAQC,GAC5BxB,EAAKmB,SAAS,CAAEF,MAAM,EAAMD,MAAOQ,EAAKR,SAnB5ChB,EAAA,OAAAC,OAAAwB,EAAA,EAAAxB,CAAAJ,EAAAC,GAAAG,OAAAyB,EAAA,EAAAzB,CAAAJ,EAAA,EAAA8B,IAAA,SAAAC,MAAA,WAsBW,IAAAC,EACiB1B,KAAKY,MAArBE,EADDY,EACCZ,KAAMD,EADPa,EACOb,MACd,OACEc,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,OAAQA,IACRC,QAAShC,KAAKmB,mBACdc,QAAS,IAEXN,EAAAC,EAAAC,cAACK,EAAD,CACEpB,KAAMA,EACNqB,IAAKJ,IACLK,SAAUvB,EACVwB,YAAarC,KAAKe,gBAClBuB,YAAatC,KAAKiB,gBAClBsB,QAASvC,KAAKkB,mBArCxBxB,EAAA,CAA4B8C,aCmEbC,EAlEH,kBACVd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEM,IAAI,mCACJO,IAAI,gBACJC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,mBAGlClB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,OACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,WACbnB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,uBADF,wGAGEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAJF,mYAYAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkB,EAAD,MACApB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,ofAUAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,4BAEEF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,WAHF,6DAKEF,EAAAC,EAAAC,cAAA,WALF,6EASAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,mBAEEF,EAAAC,EAAAC,cAAA,oEACAF,EAAAC,EAAAC,cAAA,WAHF,8EAQFF,EAAAC,EAAAC,cAAA,4FAEEF,EAAAC,EAAAC,cAAA,WAFF,yCAIEF,EAAAC,EAAAC,cAAA,WAJF,mFChDYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b90e91e0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Gallery from \"react-photo-gallery\";\nimport * as GooglePhoto from \"react-google-photo\";\nimport { photos } from \"./data\";\n\nexport class Photos extends Component {\n  state = {\n    index: 0,\n    open: false\n  };\n\n  handleClickPrev = () => {\n    this.setState({ index: this.state.index - 1 });\n  };\n\n  handleClickNext = () => {\n    this.setState({ index: this.state.index + 1 });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleClickGallery = (e: any, data: any) => {\n    this.setState({ open: true, index: data.index });\n  };\n\n  render() {\n    const { open, index } = this.state;\n    return (\n      <div>\n        <Gallery\n          photos={photos}\n          onClick={this.handleClickGallery}\n          columns={4}\n        />\n        <GooglePhoto\n          open={open}\n          src={photos}\n          srcIndex={index}\n          onClickPrev={this.handleClickPrev}\n          onClickNext={this.handleClickNext}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Photos;\n","// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport React from \"react\";\nimport Photos from \"./Photos\";\n\nconst App = () => (\n  <div>\n    <img\n      src=\"https://placekitten.com/1200/400\"\n      alt=\"Hailey & Nick\"\n      style={{ width: \"100%\", filter: \"grayscale(.2)\" }}\n    />\n\n    <div className=\"app\">\n      <div className=\"content\">\n        <p>\n          <h1>Ciao all!</h1>\n          We got hitched in Muralto, Switzerland, on March 2nd ðŸ¤µðŸ‘°ðŸ‡¨ðŸ‡­\n          <br />\n          <br />\n          Organizing an international wedding has been. . .challenging,\n          especially since we still live on different continents! Once we\n          complete the immigration process, we plan to celebrate in the U.S.\n          with all of our loved ones. Thatâ€™s why weâ€™ve built this website: to\n          share the story with you and to to keep you posted about the upcoming\n          party ðŸŽ‰ðŸ‡ºðŸ‡¸\n        </p>\n        <hr />\n        <Photos />\n        <hr />\n        <p>\n          Since we have been blessed with all we need to be happy, we have\n          decided not to create a wedding registry. We feel that being\n          surrounded by the people we love the most is our greatest gift--thatâ€™s\n          why we canâ€™t wait to start planning the party! However, for those of\n          you who would like to send us a little something, we would love it if\n          you considered making a charitable donation in lieu of a gift. Here\n          are two causes close to our hearts, one in Switzerland and one in the\n          US:\n        </p>\n        <ul>\n          <li>\n            In Switzerland:\n            <strong> Volontarie Vincenziane del Bellinzonese</strong>\n            <br />\n            CH-6500 Bellinzona. conto corr. postale : 65-4750-4 (CHF).\n            <br />\n            If you want to donate from abroad, let as know so we can help\n            coordinate.\n          </li>\n          <br />\n          <li>\n            In US:\n            <strong> Communities in Schools of Spokane, Rescue for All</strong>\n            <br />\n            If you want to donate from abroad, let as know so we can help\n            coordinate.\n          </li>\n        </ul>\n        <p>\n          ðŸ‘‰ Until we settle down together, you can send us card here: portland.\n          <br />\n          ðŸ‘‰ Stay tuned for the party.\n          <br />\n          ðŸ‘‰ Whatâ€™s up with the feet on our wedding announcement card?\n        </p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}